int index = 1;
int temp = x[0];
for(int i=1; i<n; ++i)
{
if(temp < x[i])
{
temp = x[i];
index = i + 1;
}
}
return x;
}
')
Rcpp::cppFunction('
IntegerVector ind(IntegerVector x) {
int n = x.size();
int index = 1;
int temp = x[0];
for(int i=1; i<n; ++i)
{
if(temp < x[i])
{
temp = x[i];
index = i + 1;
}
}
return index;
}
')
ind(c(1,3,2))
Rcpp::cppFunction('
int ind(IntegerVector x) {
int n = x.size();
int index = 1;
int temp = x[0];
for(int i=1; i<n; ++i)
{
if(temp < x[i])
{
temp = x[i];
index = i + 1;
}
}
return index;
}
')
ind(c(1,3,2))
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
int index = 1;
int temp = out[0];
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
if(temp < out[i]) {
temp = out[i];
index = i + 1;
}
}
out.names() = levels;
IntegerVector result = R_which_max(out);
return result.attr("names");
}
')
freq_value2(c(1,2,2))
freq_value2(c(1,1,2))
Rcpp::cppFunction('
int freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
int index = 1;
int temp = out[0];
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
if(temp < out[i]) {
temp = out[i];
index = i + 1;
}
}
out.names() = levels;
IntegerVector result = R_which_max(out);
return index;
}
')
ind(c(1,2,2))
table(c(1,2,2))
freq_value2(c(1,2,2))
Rcpp::cppFunction('
int freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 1;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i + 1;
}
}
out.names() = levels;
IntegerVector result = R_which_max(out);
return index;
}
')
freq_value2(c(1,2,2))
freq_value2(c(1,11,2,2))
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 1;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i + 1;
}
}
out.names() = levels;
IntegerVector result = R_which_max(out);
return result.attr("names");
}
')
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 1;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i + 1;
}
}
out.names() = levels;
IntegerVector result = out[index];
return result.attr("names");
}
')
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
IntegerVector result = out[index];
return result.attr("names");
}
')
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
int result = out[index];
return result.attr("names");
}
')
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
int result = out[index];
return levels;
}
')
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
int result = out[index];
return levels[1];
}
')
Rcpp::cppFunction('
CharacterVector freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
int result = out[index];
return levels[1];
}
')
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
String freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
int result = out[index];
return levels[1];
}
')
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
String freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
out.names() = levels;
int result = out[index];
return levels[index];
}
')
freq_value2(c(1,1,1,2,2))
freq_value2(c(1,1,1,2,2,2,2))
freq_value2(c(1,NA))
freq_value2(c(1,NA,NA))
Rcpp::cppFunction('
String freq_value2(IntegerVector x) {
Function R_which_max("which.max");
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
return levels[index];
}
')
Rcpp::cppFunction('
String freq_value2(IntegerVector x) {
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
return levels[index];
}
')
freq_value2(c(1,1,1,2,2,2,2))
freq_value2(c(1,1,1,2,2))
Rcpp::cppFunction('
String freq_value2(IntegerVector x) {
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
std::unordered_set<double> set;
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
return levels[index];
}
')
Rcpp::cppFunction('
String freq_value2(IntegerVector x) {
Function R_factor("factor");
x = R_factor(x);
CharacterVector levels = x.attr("levels");
int nl = levels.size(), nx = x.size();
IntegerVector out(nl);
for (int i=0; i<nx; ++i) {
out[x[i]-1]++;
}
int index = 0;
int temp = out[0];
for (int i=0; i<nl; ++i) {
if(temp < out[i]) {
temp = out[i];
index = i;
}
}
return levels[index];
}
')
freq_value2(c(1,1,1,2,2))
library(mypackage)
perms(1:3)
perms(1:4)
y <- lapply(list(1:5, 1:4, 1:3), function(x) c(sum(x), prod(x)))
list2array(y)
freq_value(c(1,1,2))
freq_value(c(1,1,2,2))
freq_value(c(1,1,2,2,2))
freq_value(c(1,1,NA,NA,NA,2))
library(devtools)
library(Rcpp)
library("mypackage", lib.loc="C:/Program Files/R/R-3.1.1/library")
remove.packages("mypackage")
devtools::install_github("https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git")
?install_github
devtools::install_github("https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git") || getOption("SylwiaKolodziejska")
library(devtools)
devtools::install_github(https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git)
devtools::install_github(https:\\github.com\SylwiaKolodziejska\Advanced-Data-Analysis-Software-Development-with-R.git)
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git' , getOption("github.user"))
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git' , getOption("SylwiaKolodziejska"))
install_github("hadley/devtools")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
check --as -cran
check --as -cran 'https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git'
install.packages("httr")
install.packages("httr")
library(httr)
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git', auth_token = "misiunia6")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git',getOption("github.SylwiaKolodziejska") ,auth_token = "misiunia6")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git',getOption("SylwiaKolodziejska") ,auth_token = "misiunia6")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git',username "SylwiaKolodziejska" ,auth_token = "misiunia6")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git',username = "SylwiaKolodziejska" ,auth_token = "misiunia6")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git',username = "SylwiaKolodziejska")
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
devtools::install_github('https:\\github.com\SylwiaKolodziejska\Advanced-Data-Analysis-Software-Development-with-R.git')
devtools::install_github('https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
getOption("github.user")
build github devtools
setOption("github.user")
setOption("github.user")
?getOption
?base
setOption((github.user, pathname, "SylwiaKolodziejska", overwrite=TRUE))
setOption(("github.user", pathname, "SylwiaKolodziejska", overwrite=TRUE))
setOption((this, "github.user", pathname, "SylwiaKolodziejska", overwrite=TRUE))
setOption((this, "github.user", pathname, "SylwiaKolodziejska", overwrite=TRUE))
setOption(this, "github.user", pathname, "SylwiaKolodziejska", overwrite=TRUE)
setOption((this, "github.user", pathname, "SylwiaKolodziejska", overwrite=TRUE))
setUserName("SylwiaKolodziejska")
setOption((this, "github.user", SylwiaKolodziejska, overwrite=TRUE))
setOption((this, github.user", SylwiaKolodziejska, overwrite=TRUE))
setOption((this, github.user , SylwiaKolodziejska, overwrite=TRUE))
setOption((this , github.user , SylwiaKolodziejska, overwrite=TRUE))
setOption((this, "github.user" , "SylwiaKolodziejska", overwrite=TRUE))
devtools::install_github(https://github.com/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git)
devtools::install_github(SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git)
devtools::install_github(/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git)
devtools::install_github('SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
devtools::install_github('SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git', auth_token = "misiunia6")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R/blob/master/mypackage_1.0.tar.gz")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R/blob/master/mypackage_1.0.tar.gz")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git")
devtools::install_github("/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git")
devtools::install_github("/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R/myPackage")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R/blob/master/mypackage")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R/blob/master/mypackage/")
devtools::install_github("/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R")
devtools::install_github("SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git")
devtools::install_github('/SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
devtools::install_github('SylwiaKolodziejska/Advanced-Data-Analysis-Software-Development-with-R.git')
